.build_setup:
  stage: docker_build
  needs: []
  when: manual
  variables:
    DOCKER_HOST: tcp://localhost:2375
    DOCKER_TLS_CERTDIR: ""
    DOCKER_BUILDKIT: 1
    BUILDX_GIT_INFO: false
  image: docker:23
  services:
    - docker:23-dind
  tags:
    - cloud
  retry:
    max: 2
    when: [runner_system_failure, unknown_failure, stuck_or_timeout_failure]
  rules:
    - if: $CI_COMMIT_BRANCH
      changes:
        paths: [docker/*, tools/*, $DOCKER_BUILD_CONTEXT/*, cmake/profiles/*, gitlab/docker.yml, src/CMakeLists.txt, src/*/CMakeLists.txt]
        compare_to: master
  script:
    - docker pull ${IMAGE}:latest || true
    - >
      docker build
      --network=host
      --build-arg BUILDKIT_INLINE_CACHE=1
      --cache-from ${IMAGE}:latest
      -t ${IMAGE}:$CI_COMMIT_SHA
      -t ${IMAGE}:latest
      -f ${DOCKER_BUILD_CONTEXT}/Dockerfile
      .
      --progress=plain &>docker-build.log
    - tail -n 1000 docker-build.log
    - docker push ${IMAGE}:${CI_COMMIT_SHA}
    - if [ ${CI_COMMIT_BRANCH} == "master" ]; then docker push ${IMAGE}:latest; fi
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_SHORT_SHA"
    expire_in: 1 hour
    when: always
    paths:
    - docker-build.log


build_gdk-debian-ci:
  extends: .build_setup
  variables:
    IMAGE: blockstream/gdk-debian-ci
    DOCKER_BUILD_CONTEXT: docker/debian

build_gdk-ubuntu-builder:
  extends: .build_setup
  variables:
    IMAGE: blockstream/gdk-ubuntu-builder
    DOCKER_BUILD_CONTEXT: docker/ubuntu

build_gdk-fedora-builder:
  extends: .build_setup
  variables:
    IMAGE: blockstream/gdk-fedora-builder
    DOCKER_BUILD_CONTEXT: docker/fedora

build_gdk-python-builder:
  extends: .build_setup
  variables:
    IMAGE: blockstream/gdk-python-builder
    DOCKER_BUILD_CONTEXT: docker/python

build_gdk-android-builder:
  extends: .build_setup
  variables:
    IMAGE: blockstream/gdk-android-builder
    DOCKER_BUILD_CONTEXT: docker/android

build_gdk-aws-lambda-builder:
  extends: .build_setup
  variables:
    IMAGE: blockstream/gdk-aws-lambda-builder
    DOCKER_BUILD_CONTEXT: docker/aws_lambda

# build_gdk-android-bookworm-builder:
#   extends: .build_setup
#   variables:
#     IMAGE: blockstream/gdk-android-builder
#     DOCKER_BUILD_CONTEXT: docker/android-bookworm

build_gdk-ubuntu-arm64-builder:
  extends: .build_setup
  tags:
    - cloud-arm
  variables:
    IMAGE: blockstream/gdk-ubuntu-builder
    DOCKER_BUILD_CONTEXT: docker/ubuntu-arm64
  script:
    # - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
    - docker context create builder
    - docker buildx create builder --use
    - mkdir -p downloads
    - docker buildx build --platform linux/arm64 --load
        -t ${IMAGE}:${CI_COMMIT_SHA} -t ${IMAGE}:latest
        -f ${DOCKER_BUILD_CONTEXT}/Dockerfile . --progress=plain &>docker-build.log
    - docker push ${IMAGE}:${CI_COMMIT_SHA}
    - if [ ${CI_COMMIT_BRANCH} == "master" ]; then docker push ${IMAGE}:latest; fi
